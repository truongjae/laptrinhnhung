C51 COMPILER V9.01   MATKHAU                                                               04/01/2022 09:33:29 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MATKHAU
OBJECT MODULE PLACED IN matkhau.OBJ
COMPILER INVOKED BY: D:\Program Files\Keil\C51\BIN\C51.EXE matkhau.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <REGX51.H>
   2          #include "string.H"  // for strcmp
   3          
   4          #define keypad P1
   5          #define LCD_dat P2
   6          
   7          sbit rs = P3^0; // bat tat
   8          sbit en = P3^1; // bat tat
   9          
  10          sbit device = P3^2; // electic bilb
  11          
  12          void dely (unsigned int dly);
  13          void lcd_cmd (unsigned char ch);
  14          void lcd_data (unsigned char cha);
  15          void lcd_str(unsigned char *str);
  16          char get_key_pad(void);
  17          
  18          void main (void) {
  19   1              char KeyVal = 0;
  20   1              unsigned int KeyCnt = 0;
  21   1              unsigned int CmpPassword = 0;
  22   1              char DefaultPAssword[5] = "1234";
  23   1              char EnteredPassword[5];
  24   1              device = 0;
  25   1              lcd_cmd(0x38);
  26   1              lcd_cmd(0x0c);
  27   1              lcd_cmd(0x06);
  28   1              lcd_cmd(0x01);
  29   1      
  30   1              while (1) {
  31   2                      lcd_cmd(0x80);
  32   2                      lcd_str("Enter Password: ");
  33   2      
  34   2                      KeyVal = get_key_pad();
  35   2                      if (KeyVal != 0) {
  36   3                              EnteredPassword[KeyCnt] = KeyVal;
  37   3                              lcd_cmd(0xc0 + KeyCnt);
  38   3                              lcd_data('*');
  39   3                              KeyCnt = KeyCnt + 1;
  40   3                      }
  41   2                      if (KeyCnt == 4) {
  42   3                              lcd_cmd(0x01);
  43   3                              KeyCnt = 0;   // 6666
  44   3                              CmpPassword = strcmp(DefaultPAssword, EnteredPassword);
  45   3                               if (CmpPassword == 0) {
  46   4                                       device = ~device; // switching on & off
  47   4                                       lcd_cmd(0x80);
  48   4                                       lcd_str("Correct password");
  49   4                                       dely(500);
  50   4                               } else {
  51   4                                       lcd_cmd(0x80);
  52   4                                       lcd_str("Wrong password");
  53   4                                       dely(500);
  54   4                               }
  55   3                      }
C51 COMPILER V9.01   MATKHAU                                                               04/01/2022 09:33:29 PAGE 2   

  56   2              }
  57   1      }
  58          
  59          char get_key_pad(void) {
  60   1              char key_val = 0;
  61   1              keypad = 0xFE; // ROW1 = 0
  62   1              if (keypad == 0xee) { // button 1
  63   2                      key_val = '1';
  64   2              } 
  65   1              if (keypad == 0xde) { //Button 2
  66   2                      key_val = '2';
  67   2              }
  68   1              if (keypad == 0xbe) { // button 3
  69   2                      key_val = '3';
  70   2              } 
  71   1      
  72   1              keypad = 0xFD; // ROW2 = 0
  73   1              if (keypad == 0xED) { //Button 4
  74   2                      key_val = '4';
  75   2              }
  76   1              if (keypad == 0xDD) { // button 5
  77   2                      key_val = '5';
  78   2              } 
  79   1              if (keypad == 0xBD) { //Button 6
  80   2                      key_val = '6';
  81   2              }
  82   1      
  83   1              keypad = 0xFB; // ROW3 = 0
  84   1              if (keypad == 0xEB) { // button 7
  85   2                      key_val = '7';
  86   2              } 
  87   1              if (keypad == 0xDB) { //Button 8
  88   2                      key_val = '8';
  89   2              }
  90   1              if (keypad == 0xBB) { // button 9
  91   2                      key_val = '9';
  92   2              } 
  93   1      
  94   1              keypad = 0xF7; // ROW4 = 0
  95   1              if (keypad == 0xE7) { //Button *
  96   2                      key_val = '*';
  97   2              }
  98   1              if (keypad == 0xD7) { //Button 0
  99   2                      key_val = '0';
 100   2              }
 101   1              if (keypad == 0xB7) { //Button #
 102   2                      key_val = '#';
 103   2              }
 104   1              return key_val;
 105   1      }
 106          
 107          void lcd_str(unsigned char *str) {
 108   1              unsigned int loop = 0;
 109   1              for (loop = 0; str[loop] != '\0'; loop++) {
 110   2                      lcd_data(str[loop]);
 111   2              }
 112   1      }
 113          void lcd_data(unsigned char ch) {
 114   1              LCD_dat = ch;
 115   1              rs = 1;  // data
 116   1              en = 1;
 117   1              dely(10);
C51 COMPILER V9.01   MATKHAU                                                               04/01/2022 09:33:29 PAGE 3   

 118   1              en = 0;
 119   1      }
 120          
 121          void lcd_cmd(unsigned char ch) {
 122   1              LCD_dat = ch;
 123   1              rs = 0; // cmd
 124   1              en = 1;
 125   1              dely(10);
 126   1              en = 0;
 127   1      } 
 128          
 129          void dely(unsigned int dly) {
 130   1              unsigned int loop = 0;
 131   1              unsigned int delay_gen = 0;
 132   1              for (loop = 0; loop < dly; loop++) 
 133   1              for (delay_gen = 0; delay_gen < 1000; delay_gen++); // DELAY
 134   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    397    ----
   CONSTANT SIZE    =     54    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      20
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
